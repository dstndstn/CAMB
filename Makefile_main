
#Files containing evolution equations initial power spectrum module
POWERSPECTRUM ?= power_tilt
REIONIZATION ?= reionization
RECOMBINATION ?= recfast

BISPECTRUM ?= SeparableBispectrum

#Module doing non-linear scaling
NONLINEAR     ?= halofit_ppf

#Driver program
DRIVER        ?= inidriver.f90
#DRIVER       ?= sigma8.f90
#DRIVER       ?= tester.f90

Release: OUTPUT_DIR = Release
Debug: OUTPUT_DIR = Debug

Release: DLL_DIR = Releaselib
Debug: DLL_DIR = Debuglib

OUTPUT_DIR ?= Release
PYCAMB_OUTPUT_DIR ?= pycamb/camb
DLL_DIR ?= Releaselib


CAMBLIB       = libcamb_$(RECOMBINATION).a

F90WFLAGS     = -Waliasing -Wampersand -Wconversion -Wc-binding-type -Wintrinsics-std \
        -Wno-tabs -Wintrinsic-shadow -Wline-truncation -Wtarget-lifetime -Wreal-q-constant
# -Wsurprising -Wunused

F90FLAGS      = $(FFLAGS)
#F90FLAGS      += $(F90WFLAGS)

SF90FLAGS      = $(SFFLAGS) $(FFLAGS)

HEALPIXLD     = -L$(HEALPIXDIR)/lib -lhealpix -L$(FITSDIR) -l$(FITSLIB)
CAMBSRCS      = constants.f90 classes.f90 subroutines.f90 $(POWERSPECTRUM).f90 \
        $(RECOMBINATION).f90 $(REIONIZATION).f90 DarkEnergyInterface.f90 \
        modules.f90 bessels.f90 equations.f90 DarkEnergyFluid.f90 \
        DarkEnergyPPF.f90 $(NONLINEAR).f90 lensing.f90 \
        $(BISPECTRUM).f90 cmbmain.f90 camb.f90

CAMBOBJ       = $(patsubst %.f90,%.o,$(CAMBSRCS))
CAMBSO        = camb_python.f90


FORUTILS_DIR = $(FORUTILSPATH)/$(OUTPUT_DIR)/
camblib.so: FORUTILS_DIR=$(FORUTILSPATH)/$(DLL_DIR)/
F90CRLINK     += -L$(FORUTILS_DIR) -lforutils

## CosmoRec
ifeq ($(RECOMBINATION),cosmorec)
COSMOREC_PATH ?=../CosmoRec/
GSL_LINK ?=-lgsl -lgslcblas
camb: libCosmoRec.a
$(CAMBLIB): libCosmoRec.a
F90CRLINK += -L$(COSMOREC_PATH) -lCosmoRec $(GSL_LINK) -lstdc++
endif


ifeq ($(RECOMBINATION),hyrec)
HYREC_PATH ?= ../HyRec/
camb: libhyrec.a
$(CAMBLIB): libhyrec.a
F90CRLINK += -L$(HYREC_PATH) -lhyrec
endif

default: camb

all: camb camblib.so libcamb
Release: camb camblib.so
Debug: camb camblib.so

libcamb: libforutils directories
	$(MAKE) -C $(OUTPUT_DIR) -r -f ../Makefile_main $(CAMBLIB)

libcambso: libforutils_so directories_so
	$(MAKE) -C $(DLL_DIR) -r -f ../Makefile_main $(CAMBLIB) F90FLAGS="$(SF90FLAGS)" OUTPUT_DIR=$(DLL_DIR)

camb: libcamb $(DRIVER)
	$(F90C) $(F90FLAGS) $(MODOUT) $(IFLAG)$(OUTPUT_DIR)/ $(IFLAG)$(FORUTILS_DIR) \
		$(DRIVER) $(OUTPUT_DIR)/$(CAMBLIB) $(F90CRLINK) -o $@

camblib.so: libcambso $(CAMBSO)
	$(F90C) $(SF90FLAGS) $(SMODOUT) $(IFLAG)$(DLL_DIR)/ $(IFLAG)$(FORUTILS_DIR)  \
		$(CAMBSO) $(DLL_DIR)/$(CAMBLIB) $(F90CRLINK) -o $(DLL_DIR)/camblib.so
	cp $(DLL_DIR)/camblib.so $(PYCAMB_OUTPUT_DIR)


$(CAMBLIB): $(CAMBOBJ)
	$(AR) -r $@ $(CAMBOBJ)

camb_fits: libforutils directories writefits.f90 $(CAMBOBJ) $(DRIVER)
	$(F90C) $(F90FLAGS) -I$(HEALPIXDIR)/include $(CAMBOBJ) writefits.f90 $(DRIVER) \
		$(F90CRLINK) $(HEALPIXLD) -DWRITE_FITS -o $@

%.o: ../%.f90
	$(F90C) $(F90FLAGS) $(IFLAG)$(FORUTILS_DIR) -c $< -o $*.o

directories:
	mkdir -p $(OUTPUT_DIR)

directories_so:
	mkdir -p $(DLL_DIR)

libforutils_so:
	cd $(FORUTILSPATH) && \
	$(MAKE) $(DLL_DIR)

libforutils:
	cd $(FORUTILSPATH) && \
	$(MAKE) $(OUTPUT_DIR)


clean:
	-rm -f *.o *.a *.d core *.mod *.optrpt *.d
	-rm -rf Release* Debug*

delete:
	rm -f camb	
	rm -f pycamb/camb/*.so

## CosmoRec make parts
cleanCR:
	cd $(COSMOREC_PATH); make tidy;

libCosmoRec.a:
	cd $(COSMOREC_PATH); make lib;

libhyrec.a:
	cd $(HYREC_PATH); make libhyrec.a;

export
-include *.d

.PHONY: clean directories libcamb Release Debug
